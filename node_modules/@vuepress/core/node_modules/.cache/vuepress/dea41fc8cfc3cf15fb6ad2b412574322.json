{"remainingRequest":"D:\\code_file\\IVAn\\vuepress-starter\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\code_file\\IVAn\\vuepress-starter\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\code_file\\IVAn\\vuepress-starter\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!D:\\code_file\\IVAn\\vuepress-starter\\node_modules\\@vuepress\\markdown-loader\\index.js??ref--1-2!D:\\code_file\\IVAn\\vuepress-starter\\docs\\java\\Java+PhantomJs实现后台生成Echarts图片.md?vue&type=template&id=19889dfa&","dependencies":[{"path":"D:\\code_file\\IVAn\\vuepress-starter\\docs\\java\\Java+PhantomJs实现后台生成Echarts图片.md","mtime":1625291947046},{"path":"D:\\code_file\\IVAn\\vuepress-starter\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\code_file\\IVAn\\vuepress-starter\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\code_file\\IVAn\\vuepress-starter\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\code_file\\IVAn\\vuepress-starter\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\code_file\\IVAn\\vuepress-starter\\node_modules\\@vuepress\\markdown-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}